{"version":3,"sources":["helperFunctions.js","components/StopWatch.jsx","App.js","reportWebVitals.js","index.js","components/StopWatch.module.css"],"names":["onStartStopFunction","subscriber","setTimer","stopTime","setSubscribers","setStopTime","unsubscribe","interval","pipe","map","v","subscribe","StopWatch","useState","isStart","setIsStart","timer","prevent","setPrevent","startTime","waitTime","resetTime","realTime","time","seconds","Math","floor","slice","minutes","hours","getTime","className","styles","container","display","buttons","button","stop_button","onClick","timerOut","setTimeout","clearTimeout","onWaitFunction","onResetFunction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d1585ae6.chunk.js","sourcesContent":["import { interval } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nconst delay = 1000;\r\n\r\nexport const onStartStopFunction = ({ subscriber, setTimer, stopTime, setSubscribers, setStopTime }) => {\r\n  if (!subscriber) {\r\n    const timerSubscriber = interval(delay)\r\n      .pipe(map(v => v + 1))\r\n      .subscribe(v => {\r\n        setTimer(v + stopTime);\r\n      });\r\n      setSubscribers(timerSubscriber);\r\n  } else {\r\n    subscriber.unsubscribe();\r\n    setTimer(0);\r\n    setStopTime(0);\r\n    setSubscribers(\"\");\r\n  }\r\n};\r\n\r\nexport const onWaitFunction = ({ prevent, setPrevent, subscriber, setStopTime, timer, setSubscribers, setIsStart }) => {\r\n  if (prevent) {\r\n    setPrevent(false);\r\n    const timerOut = setTimeout(() => {\r\n      setPrevent(true);\r\n      clearTimeout(timerOut);\r\n    }, 300);\r\n  } else {\r\n    subscriber && subscriber.unsubscribe();\r\n    \r\n    setIsStart(false)\r\n    setStopTime(timer);\r\n    setSubscribers(\"\");\r\n  }\r\n};\r\n\r\nexport const onResetFunction = ({  subscriber, setTimer, setSubscribers }) => {\r\nsubscriber && subscriber.unsubscribe();\r\n  const timerSubscriber = interval(delay).subscribe( v => {\r\n    setTimer(v);\r\n  });\r\n  setSubscribers(timerSubscriber);\r\n};\r\n\r\n\r\nexport const getTime = (time) => {\r\n    let seconds = (\"0\" + (Math.floor(time) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(time / 60) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(time / 3600)).slice(-2);\r\n    return `${hours} : ${minutes} : ${seconds}`;\r\n  }\r\n","import { React, useState } from 'react'\r\nimport { getTime, onWaitFunction, onResetFunction, onStartStopFunction } from './../helperFunctions'\r\nimport styles from './StopWatch.module.css'\r\n\r\nexport const StopWatch = () => {\r\n    const [isStart, setIsStart] = useState(false)\r\n    const [timer, setTimer] = useState(0);\r\n    const [stopTime, setStopTime] = useState(0);\r\n    const [subscriber, setSubscribers] = useState(\"\");\r\n    const [prevent, setPrevent] = useState(true);\r\n\r\n    const startTime = { subscriber, setTimer, stopTime, setSubscribers, setStopTime };\r\n    const waitTime = { prevent, setPrevent, subscriber, setStopTime, timer, setSubscribers, setIsStart };\r\n    const resetTime = { subscriber, setTimer, setSubscribers };\r\n\r\n    const onStop = () => {\r\n        setIsStart(!isStart);\r\n        onStartStopFunction(startTime)\r\n    }\r\n\r\n    const onStart = () => {\r\n        setIsStart(!isStart);\r\n        onStartStopFunction(startTime)\r\n    }\r\n\r\n    const onWait = () => {\r\n        onWaitFunction(waitTime)\r\n    }\r\n\r\n    const onReset = () => {\r\n        setIsStart(true);\r\n        onResetFunction(resetTime)\r\n    }\r\n    let realTime = getTime(timer);\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.display}>{realTime}</div>\r\n            <div className={styles.buttons}>\r\n                <div>\r\n                    {\r\n                        isStart\r\n                            ? <button className={`${styles.button} ${styles.stop_button}`} onClick={onStop}> Stop </button>\r\n                            : <button className={styles.button} onClick={onStart}> Start </button>\r\n                    }\r\n                    <button className={styles.button} onClick={onWait}> Wait </button>\r\n                    <button className={styles.button} onClick={onReset}> Reset </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport { StopWatch } from './components/StopWatch';\n\nconst App = () => {\n\n  return (\n    <div className=\"container\">\n    <div className=\"title\">StopWatch</div>\n      <StopWatch />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StopWatch_container__1k0IV\",\"display\":\"StopWatch_display__2sYd7\",\"button\":\"StopWatch_button__CfJoW\",\"stop_button\":\"StopWatch_stop_button__1wbe_\"};"],"sourceRoot":""}